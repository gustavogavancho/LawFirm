@page "/client/search/{searchTerm}"

@attribute [Authorize]

@inject IClientDataService ClientDataService
@inject NavigationManager Navigation

<PageTitle>Client Search - LawFirm</PageTitle>

@if (showConfirmationDialog)
{
    <YesNoModal Message="Do you want to delete this item?" OnConfirmation="HandleConfirmation" />
}

<div class="alert alert-secondary">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb" style="margin-bottom: 0;">
            <li class="breadcrumb-item"><a class="font-weight-bold link-dark" href="client">Client</a></li>
            <li class="breadcrumb-item active" aria-current="page">Search</li>
        </ol>
    </nav>
</div>

@if (submitSuccessful)
{
    <Alert Message="The user has been deleted successfully!" AlertType="success" />
}
else if (errorMessage is not null)
{
    <Alert Message="@errorMessage" AlertType="danger" />
}

<div class="responsive-table">
    @if (clients is null)
    {
        <p>Loading...</p>
    }
    else
    {
        <TableView Items="clients" Context="client">
            <HeaderTemplate>
                <th>Client Type</th>
                <th>Firt Name</th>
                <th>Last Name</th>
                <th>Nit</th>
                <th>Representative</th>
                <th></th>
            </HeaderTemplate>
            <RowTemplate>
                <th scope="col">@client.ClientType</th>
                <td>@client.FirstName</td>
                <td>@client.LastName</td>
                <td>@client.Nit</td>
                <td>@client.Representative</td>
                <td class="text-end">
                    <AuthorizeView>
                        <button title="Details" class="btn btn-primary" @onclick="@(() => Navigation.NavigateTo($"/client/{client.Id}"))">
                            <i class="bi bi-list-task"></i>
                        </button>
                        <button title="Edit" class="btn btn-primary" @onclick="@(() => Navigation.NavigateTo($"/client-upsert/{client.Id}"))">
                            <i class="bi bi-pencil-square"></i>
                        </button>
                        @*<button title="Delete" class="btn btn-danger" @onclick="@(() => ShowConfirmationModal(client.Id))">
                    <i class="bi bi-trash3"></i>
                    </button>
                    *@
                    </AuthorizeView>
                </td>
            </RowTemplate>
        </TableView>
    }
</div>



@code {
    [Parameter] public string SearchTerm { get; set; } = default!;

    private bool showConfirmationDialog;
    private Guid clientId;
    private ICollection<ClientVm> clients;
    private bool submitSuccessful;
    private ElementReference myInput;
    private string _searchTerm = "";
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await GetClients();
    }

    private async Task HandleConfirmation(bool confirmed)
    {
        if (confirmed)
        {
            await ClientDataService.DeleteClient(clientId);
            showConfirmationDialog = false;
            await GetClients();
        }
        showConfirmationDialog = false;
    }

    private async Task GetClients()
    {
        clients = await ClientDataService.FindClientsBySearchTerm(SearchTerm);
    }
}
