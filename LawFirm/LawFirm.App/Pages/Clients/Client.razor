@page "/client/{id:guid}"

@attribute [Authorize]

@inject IClientDataService ClientDataService

<PageTitle>Client Details - LawFirm</PageTitle>

<div class="alert alert-secondary">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb" style="margin-bottom: 0;">
            <li class="breadcrumb-item"><a class="font-weight-bold link-dark" href="client">Client</a></li>
            <li class="breadcrumb-item active" aria-current="page">Details</li>
        </ol>
    </nav>
</div>

<EditForm Model="client">
    <FormSection Title="Client Information" HelpText="Refers to information or data about a customer or client.">
        <FormFieldSet Width="col-11">
            <label for="clientType" class="form-label text-muted"><b>Client Type</b></label>
            <InputSelect @bind-Value="client.ClientType" class="form-select" id="clientType" disabled>
                <option value=""></option>
                <option value="Natural Person">Natural Person</option>
                <option value="Legal Person">Legal Person</option>
            </InputSelect>
            <ValidationMessage For="@(() => client.ClientType)" />
        </FormFieldSet>
        <FormFieldSet Width="col-11">
            <label for="name" class="form-label text-muted"><b>Name</b></label>
            <InputText @bind-Value="client.FirstName" class=" form-control" id="userName" disabled />
            <ValidationMessage For="@(() => client.FirstName)" />
        </FormFieldSet>
        <FormFieldSet Width="col-11">
            <label for="lastName" class="form-label text-muted"><b>Last Name</b></label>
            <InputText @bind-Value="client.LastName" class=" form-control" id="lastNamev" disabled />
            <ValidationMessage For="@(() => client.LastName)" />
        </FormFieldSet>
        <FormFieldSet Width="col-11">
            <label for="businessName" class="form-label text-muted"><b>Business Name</b></label>
            <InputText @bind-Value="client.BusinessName" class=" form-control" id="businessName" disabled />
            <ValidationMessage For="@(() => client.BusinessName)" />
        </FormFieldSet>
        <FormFieldSet Width="col-11">
            <label for="nit" class="form-label text-muted"><b>Nit</b></label>
            <InputNumber @bind-Value="client.Nit" class=" form-control" id="nit" disabled />
            <ValidationMessage For="@(() => client.Nit)" />
        </FormFieldSet>
        <FormFieldSet Width="col-11">
            <label for="representative" class="form-label text-muted"><b>Representative</b></label>
            <InputText @bind-Value="client.Representative" class=" form-control" id="lastNamev" disabled />
            <ValidationMessage For="@(() => client.Representative)" />
        </FormFieldSet>
    </FormSection>

    <FormSection Title="Contact Details" HelpText="Information or data that allows individuals or entities to get in touch with a person, organization, or business.">
        <FormFieldSet Width="col-11">
            <label for="phoneNumber" class="form-label text-muted"><b>Phone Number</b></label>
            <InputNumber @bind-Value="client.PhoneNumber" class=" form-control" id="phoneNumber" disabled />
            <ValidationMessage For="@(() => client.PhoneNumber)" />
        </FormFieldSet>
        <FormFieldSet Width="col-11">
            <label for="address" class="form-label text-muted"><b>Address</b></label>
            <InputText @bind-Value="client.Address" class=" form-control" id="address" disabled />
            <ValidationMessage For="@(() => client.Address)" />
        </FormFieldSet>
        <FormFieldSet Width="col-11">
            <label for="email" class="form-label text-muted"><b>Email</b></label>
            <InputText @bind-Value="client.Email" class=" form-control" id="email" disabled />
            <ValidationMessage For="@(() => client.Email)" />
        </FormFieldSet>
    </FormSection>

</EditForm>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private CreateClientViewModel client = new();

    protected async override Task OnInitializedAsync()
    {
        client = await ClientDataService.GetClient(Id);
    }
}
