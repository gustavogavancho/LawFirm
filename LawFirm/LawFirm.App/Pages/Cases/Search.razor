@page "/case/search/{searchTerm}"

@attribute [Authorize]

@inject ICaseDataService CaseDataService
@inject NavigationManager Navigation
@inject IJSRuntime JsRuntime

<PageTitle>Case Search - LawFirm</PageTitle>

<SimpleNavigation BasePageRef="case" BasePage="Case" CurrentPage="Search" />

@if (cases is null)
{
    <p>Loading...</p>
}
else
{
    @if (cases.Any())
    {
        <div class="responsive-table">
            <TableView Items="cases" Context="caseEntity">
                <HeaderTemplate>
                    <th>Client Type</th>
                    <th>File Number</th>
                    <th>Client</th>
                    <th>Counter Part</th>
                    <th>Stage</th>
                    <th></th>
                </HeaderTemplate>
                <RowTemplate>
                    <td>@caseEntity.ClientType</td>
                    <td>@caseEntity.FileNumber</td>
                    <td>
                        @foreach (var item in caseEntity.Clients)
                        {
                        <li style="list-style-type: none;">@(!String.IsNullOrEmpty(item.FirstName) ? $"{item.FirstName} {item.LastName}" : $"{item.BusinessName}")</li>
                        }
                    </td>
                    <td>
                        @foreach (var item in caseEntity.CounterParts)
                        {
                        <li style="list-style-type: none;">@($"{item.Name}")</li>
                        }
                    </td>
                    <td>@caseEntity.Stage</td>
                    <td class="text-end">
                        <AuthorizeView>
                            <Authorized>
                                <button title="Details" class="btn btn-primary btn-sm" @onclick="@(() => Navigation.NavigateTo($"/case-detail/{caseEntity.Id}"))">
                                    <i class="bi bi-list-task"></i>
                                </button>
                                <button title="Edit" class="btn btn-primary btn-sm" @onclick="@(() => Navigation.NavigateTo($"/case-update/{caseEntity.Id}"))">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button title="Delete" class="btn btn-danger btn-sm" @onclick="@(() => ShowConfirmationModal(caseEntity.Id))">
                                    <i class="bi bi-trash3"></i>
                                </button>
                            </Authorized>
                        </AuthorizeView>
                    </td>
                </RowTemplate>
            </TableView>
        </div>
    }
    else
    {
        <NoItemsRedirect NoItemsMessage="You don't have any clients" RefPage="client-upsert" RefPageText="why not add one?" />
    }
}

<div class="mt-2 mb-1">
    <div class="row">
        <div class="offset-4 col-8 text-end">
            <button class="btn btn-secondary" type="button" @onclick="@(() => Navigation.NavigateTo("client"))">Go back</button>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public string SearchTerm { get; set; }

    private bool showConfirmationDialog;
    private Guid caseId;

    private ICollection<CaseVm> cases;

    protected override async Task OnInitializedAsync()
    {
        await GetCases();
    }

    private async Task HandleConfirmation(bool confirmed)
    {
        if (confirmed)
        {
            try
            {
                await CaseDataService.DeleteCase(caseId);

                await GetCases();
                await JsRuntime.InvokeVoidAsync("showSuccessToastr", "The Case has been deleted successfully!");

            }
            catch (Exception)
            {
                await JsRuntime.InvokeVoidAsync("showErrorToastr", "Something went wrong, please try again or contact your supplier.");
            }
        }
        showConfirmationDialog = false;
    }

    private async Task GetCases()
    {
        cases = await CaseDataService.FindCasesBySearchTerm(SearchTerm);
    }

    private void ShowConfirmationModal(Guid id)
    {
        caseId = id;
        showConfirmationDialog = true;
    }
}
