@page "/case"

@attribute [Authorize]

@inject ICaseDataService CaseDataService
@inject NavigationManager Navigation

<SimpleIndexBar RefText="Do you want to create a new case?" ComplementText="Please" RefPage="case-upsert" RefPageDescription="Add it here." />

@if (CaseList is null)
{
    <p>Loading...</p>
}
else
{
    @if (CaseList.Any())
    {
        <div class="responsive-table">
            <TableView Items="CaseList" Context="caseEntity">
                <HeaderTemplate>
                    <th>File Number</th>
                    <th></th>
                </HeaderTemplate>
                <RowTemplate>
                    <th scope="col">@caseEntity.FileNumber</th>
                    <td class="text-end">
                        <AuthorizeView>
                            <button title="Details" class="btn btn-primary" >
                                <i class="bi bi-list-task"></i>
                            </button>
                            <button title="Edit" class="btn btn-primary" >
                                <i class="bi bi-pencil-square"></i>
                            </button>
                            <button title="Delete" class="btn btn-danger">
                                <i class="bi bi-trash3"></i>
                            </button>
                        </AuthorizeView>
                    </td>
                </RowTemplate>
            </TableView>
        </div>
    }
    else
    {
        <NoItemsRedirect NoItemsMessage="You don't have any cases" RefPage="client-upsert" RefPageText="why not add one?"/>
    }
}

@code {
    public ICollection<CaseVm> CaseList { get; set; }


    protected override async Task OnInitializedAsync()
    {
        CaseList = await CaseDataService.GetAllCases();
    }

}
