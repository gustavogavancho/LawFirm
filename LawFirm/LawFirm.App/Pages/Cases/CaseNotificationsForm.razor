@if (Case?.Notifications is null)
{
    <p>Loading..</p>
}
else
{
    <FormSection Title="Notifications" HelpText="Case statuses.">
        <div class="row" hidden="@Disabled">
            <div class="mb-2">
                <button class="btn-sm btn-primary fw-bold" type="button" @onclick="AddNotification">
                    New Notification
                </button>
            </div>
        </div>
        <div class="row">

            @foreach (var notification in Case.Notifications)
            {

                <div class="col-6">
                    <label for="counterPartName" class="form-label text-muted fw-bold">Name</label>
                    <InputText @bind-Value="notification.Description" class=" form-control" id="counterPartName" Disabled="@Disabled" />
                    <ValidationMessage For="@(() => notification.Description)" />
                </div>
                <div class="col-5">
                    <label for="counterPartNit" class="form-label text-muted fw-bold">Nit</label>
                    <InputDate Type="InputDateType.DateTimeLocal" @bind-Value:format="dd/MM/yyyy hh:mm:ss" @bind-Value="notification.NotificationDate" class=" form-control" id="counterPartNit" Disabled="@Disabled" />
                    <ValidationMessage For="@(() => notification.NotificationDate)" />
                </div>

                <div class="col-1" style="margin-top:31px;">
                    <button class="btn btn-danger" hidden="@Disabled" type="button" @onclick="() => RemoveNotification(notification)">
                        <i class="bi bi-file-minus-fill"></i>
                    </button>
                </div>
            }

        </div>
    </FormSection>
}

@code {
    [Parameter, EditorRequired]
    public CaseVm Case { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    private void AddNotification()
    {
        Case.Notifications.Add(new NotificationVm() { NotificationDate = DateTime.Now });
    }

    private void RemoveNotification(NotificationVm counterPart)
    {
        Case.Notifications.Remove(counterPart);
    }
}
