@if (notAuthorized)
{
    <div class="d-flex justify-content-center align-items-center vh-100">
        <p>You do not have access to the requested page</p>
    </div>
}

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }
    [Inject]
    private NavigationManager navigationManager { get; set; }

    bool notAuthorized { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState;

        if (authState?.User?.Identity is null || !authState.User.Identity.IsAuthenticated)
        {
            var returnUrl = navigationManager.ToBaseRelativePath(navigationManager.Uri);
            if (string.IsNullOrEmpty(returnUrl))
            {
                navigationManager.NavigateTo("login");
            }
            else
            {
                navigationManager.NavigateTo($"login?returnUrl={returnUrl}");
            }
        }
        else
        {
            notAuthorized = true;
        }

    }
}