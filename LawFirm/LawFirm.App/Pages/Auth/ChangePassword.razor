@page "/user-password/{id}"

@inject NavigationManager Navigation
@inject IAuthenticationService AuthenticationService
@inject IJSRuntime JsRuntime

@attribute [Authorize]

<PageTitle>Change Password - Law Firm</PageTitle>

<div class="alert alert-secondary">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb" style="margin-bottom: 0;">
            <li class="breadcrumb-item"><a class="font-weight-bold link-dark" href="user">User</a></li>
            <li class="breadcrumb-item active" aria-current="page">Change Password</li>
        </ol>
    </nav>
</div>

@if (submitSuccessful)
{
    <Alert Message="The user password has been changed successfully!" AlertType="success" />
}
else if (errorMessage is not null)
{
    <Alert Message="@errorMessage" AlertType="danger" />
}

<EditForm Model="changePasswordViewModel" OnValidSubmit="HandleValidSubmit">

    <FluentValidationValidator />

    <FormSection Title="Change password" HelpText="If you forgot or lost your password for the appplication, you may be able to change or reset it here. ">
        <FormFieldSet Width="col-11">
            <label for="password" class="form-label text-muted"><b>Password</b></label>
            <InputText type="password" @bind-Value="changePasswordViewModel.Password" class=" form-control" id="password" />
            <ValidationMessage For="@(() => changePasswordViewModel.Password)" />
        </FormFieldSet>
        <FormFieldSet Width="col-11">
            <label for="confirmPassword" class="form-label text-muted"><b>Confirm Password</b></label>
            <InputText type="password" @bind-Value="changePasswordViewModel.ConfirmPassword" class=" form-control" id="confirmPassword" />
            <ValidationMessage For="@(() => changePasswordViewModel.ConfirmPassword)" />
        </FormFieldSet>
    </FormSection>

    <div class="mt-4 mb-2">
        <div class="row">
            <div class="offset-4 col-8 text-end">
                <button class="btn btn-primary" type="submit">Submit</button>
                <button class="btn btn-outline-secondary" type="button" @onclick="HandleCancel">Cancel</button>
            </div>
        </div>
    </div>

</EditForm>

@code {
    [Parameter] public string Id { get; set; }
    
    private ChangePasswordViewModel changePasswordViewModel = new ChangePasswordViewModel();
    private bool submitSuccessful;
    private string errorMessage;

    private async Task HandleValidSubmit()
    {
        try
        {
            changePasswordViewModel.Id = Id;
            await AuthenticationService.ChangePassword(changePasswordViewModel);
            submitSuccessful = true;
            changePasswordViewModel = new();
        }
        catch (Exception)
        {
            submitSuccessful = false;
            errorMessage = "There was a problem changing your password.";
        }

        await JsRuntime.InvokeVoidAsync("scrollUtils.scrollToTop");
    }

    private void HandleCancel()
    {
        Navigation.NavigateTo("user");
    }
}