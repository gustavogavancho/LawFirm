@page "/"
@using System.Collections.ObjectModel

@inject IEventDataService EventDataService

<PageTitle>Events - LawFirm</PageTitle>

<SfSchedule TValue="EventVm" Height="650px" @bind-SelectedDate="@CurrentDate">

    <ScheduleEvents TValue="EventVm" OnActionBegin="OnActionBegin">

    </ScheduleEvents>

    <ScheduleEventSettings DataSource="events" AllowAdding="false" EnableTooltip="true">
        <ScheduleField Id="Id">
            <FieldSubject Name="Title"></FieldSubject>
            <FieldLocation Name="Location"></FieldLocation>
            <FieldDescription Name="Description"></FieldDescription>
            <FieldStartTime Name="EventStartDate"></FieldStartTime>
            <FieldEndTime Name="EventEndDate"></FieldEndTime>
        </ScheduleField>
    </ScheduleEventSettings>

    <ScheduleViews>
        <ScheduleView Option="View.Day"></ScheduleView>
        <ScheduleView Option="View.Week"></ScheduleView>
        <ScheduleView Option="View.WorkWeek"></ScheduleView>
        <ScheduleView Option="View.Month"></ScheduleView>
        <ScheduleView Option="View.Agenda"></ScheduleView>
    </ScheduleViews>

</SfSchedule>

@code {
    DateTime CurrentDate = DateTime.Now;
    ObservableCollection<EventVm> events = new();

    protected async override Task OnInitializedAsync()
    {
        var response = await EventDataService.GetEvents();

        events = new ObservableCollection<EventVm>(response);
    }

    private async Task OnActionBegin(ActionEventArgs<EventVm> args)
    {
        if (args.ActionType == ActionType.EventRemove)
        {
            var deletedRecords = args.DeletedRecords;

            if(deletedRecords.Any()) await EventDataService.DeleteEvent(deletedRecords[0].Id);
        }
    }
}